apply plugin: 'com.android.application'

android {
	signingConfigs {
		config {
			keyAlias 'alias'
			keyPassword 'pwd'
		}
	}
	compileSdkVersion 27

	defaultConfig {
		applicationId "at.ac.tuwien.caa.docscan"
		minSdkVersion 15
		targetSdkVersion 27
		versionCode 28
		versionName "1.2.2"
		multiDexEnabled true
//		this is used to show the build time in the AboutActivity
		buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
		// we need vectorDrawables.useSupportLibrary to get rid of this error:
//		References to other resources are not supported by build-time PNG generation
		vectorDrawables.useSupportLibrary = true
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	// Fixed build error : Duplicate files copied in APK META-INF/xxx
	packagingOptions {

		exclude 'META-INF/DEPENDENCIES'
		exclude 'META-INF/NOTICE'
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE.txt'
		exclude 'META-INF/LICENSE.txt'
	}

// Android NDK configuration, taken from:
//    https://www.crystax.net/en/blog/3

//	sourceSets.main.jni.srcDirs = [] // disable automatic ndk-build call, which ignore our Android.mk
//	sourceSets.main.jniLibs.srcDir 'src/main/libs'

	sourceSets.main {
		jni.srcDirs = [] //disable automatic nd k-build call
	}

	// call regular ndk-build(.cmd) script from app directory
	task ndkBuild(type: Exec) {
		workingDir file('src/main')
		commandLine getNdkBuildCmd(), 'NDK_LIBS_OUT=./jniLibs'
	}

	task cleanNative(type: Exec, description: 'Clean JNI object files') {
		commandLine getNdkBuildCmd(),
				'-C', file('src/main/jni').absolutePath, // Change src/main/jni the relative path to your jni source
				'clean'
	}

	clean.dependsOn 'cleanNative'

	tasks.withType(JavaCompile) {
		compileTask -> compileTask.dependsOn ndkBuild
	}

	clean.dependsOn cleanNative

}


def getNdkDir() {
	if (System.env.ANDROID_NDK_ROOT != null)
		return System.env.ANDROID_NDK_ROOT

	Properties properties = new Properties()
	properties.load(project.rootProject.file('local.properties').newDataInputStream())
	def ndkdir = properties.getProperty('ndk.dir', null)
	if (ndkdir == null)
		throw new GradleException("NDK location not found. Define location with ndk.dir in the local.properties file or with an ANDROID_NDK_ROOT environment variable.")

	return ndkdir
}

/*def getNdkBuildCmd() {
	def ndkbuild = getNdkDir() + "/ndk-build"
//    if (Os.isFamily(Os.FAMILY_WINDOWS))
//	ndkbuild += ".cmd"

	return ndkbuild
}*/

def getNdkBuildCmd() {
	def ndkbuild = getNdkDir() + "/ndk-build"
	if (org.gradle.internal.os.OperatingSystem.current().isWindows())
		ndkbuild += ".cmd"
	return ndkbuild
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	testImplementation 'junit:junit:4.12'
	implementation 'com.android.support:appcompat-v7:27.0.2'
	implementation 'com.dropbox.core:dropbox-core-sdk:3.0.3'
	implementation 'com.android.support:exifinterface:27.0.2'
	//    compile 'com.squareup.okhttp3:okhttp:3.5.0'
	implementation 'com.android.support:preference-v7:27.0.2'
	implementation 'com.android.support:cardview-v7:27.0.2'
	implementation 'com.android.support:design:27.0.2'
	implementation 'com.android.support:gridlayout-v7:27.0.2'
	implementation 'com.android.volley:volley:1.0.0'
	implementation 'com.firebase:firebase-jobdispatcher:0.8.4'
	implementation 'com.github.smart-fun:XmlToJson:1.4.0'
	// necessary for xmltojson
//	// retrofit - start:
//	implementation 'com.squareup.retrofit2:retrofit:2.3.0'
//	implementation 'com.squareup.okhttp3:okhttp:3.6.0'
//	implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
	// necessary for retrofit
	implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'
	// retrofit - end:
	implementation 'com.koushikdutta.ion:ion:2.+'
	implementation 'com.google.android.gms:play-services-auth:11.4.0'
	// we need this for the ProviderInstaller
	implementation 'me.dm7.barcodescanner:zxing:1.9.8'
	implementation 'com.github.bumptech.glide:glide:4.5.0'
	annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
	implementation project(':openCVLibrary')
	implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.9.0'
	implementation 'com.github.chrisbanes:PhotoView:2.0.0'
	implementation 'com.fivehundredpx:greedo-layout:1.1.0'

//    implementation 'com.google.android:flexbox:0.3.0-alpha2'
}
